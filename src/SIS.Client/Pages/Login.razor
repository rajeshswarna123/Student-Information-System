@inject Blazored.LocalStorage.ILocalStorageService localStore
@page "/login"
@using SIS.Models
@using Newtonsoft.Json;

<section class="section-conten padding-y bg">

    <div class="card mx-auto" style="max-width: 380px; margin-top:100px;">
        <div class="card-body">
            <h4 class="card-title mb-4">Login</h4>
            <EditForm Model="model" OnValidSubmit="SubmitAsync">

                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text">
                                <i class="fa fa-envelope"></i>
                            </span>
                        </div>
                        <InputText @bind-Value="model.Email" class="form-control" placeholder="Email" type="email" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"> <i class="fa fa-lock"></i> </span>
                        </div>
                        <InputText @bind-Value="model.Password" class="form-control" placeholder="Password" type="password" />
                    </div>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary btn-block"> Login  </button>
                </div>
            </EditForm>
        </div>
    </div>


    <br /><br />

</section>

@code {
    private int currentCount = 0;

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private void IncrementCount()
    {
        currentCount++;
    }
    private readonly LoginRequest model = new LoginRequest();

    public bool ShowErrors { get; set; }

    public IEnumerable<string> Errors { get; set; }
    private async Task SubmitAsync()
    {
        var httpClient = new HttpClient();

        var response = await httpClient.PostAsJsonAsync("https://localhost:44340/api/security/signin", model);
        Console.WriteLine(response.Content.ReadAsStringAsync());

        var user = JsonConvert.DeserializeObject<UserProfile>(await response.Content.ReadAsStringAsync());
        await localStore.SetItemAsync("UserToken", user.Token);
        NavigationManager.NavigateTo("/fetchdata");
    }
}